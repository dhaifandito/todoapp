{"version":3,"sources":["Comp/Header.js","Comp/Form.js","Comp/Li.js","Comp/List.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Form","text","setText","time","setTime","list","setList","useState","error","setError","add","setAdd","onClick","style","display","type","value","placeholder","onChange","e","target","required","opacity","preventDefault","id","Math","random","completed","Li","li","borderLeft","filter","el","map","item","List","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.966198d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>To Do List</h1>\r\n      <h2>List what you do!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Form({text, setText, time, setTime, list, setList}) {\r\n    const textHandler = (e) =>{\r\n        setText(e.target.value);\r\n    };\r\n    const timeHandler = (e) =>{\r\n        setTime(e.target.value);\r\n    };\r\n    const[error, setError]=useState(false);\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(text === \"\" || time === \"\"){\r\n            setError(true);\r\n        }\r\n        else {\r\n            setError(false);\r\n            setList([\r\n                ...list,{text: text, time: time, id: Math.random()*1000, completed: false}\r\n            ]\r\n            );\r\n    \r\n            setText(\"\");\r\n            setTime(\"\");\r\n        }\r\n        \r\n    };\r\n\r\n    const [add, setAdd] = useState(false);\r\n    const addHandler=()=>{\r\n        setAdd(!add);\r\n    }\r\n    \r\n    return (\r\n    <div className=\"form\">\r\n        <div className=\"form_head\">\r\n            <h3>Add New List</h3>\r\n            <button onClick={addHandler}>+</button>\r\n        </div>\r\n        <div className=\"form_body\" style={add ? {display:'block'} : {display:'none'}}>\r\n            <div className=\"form_input\">\r\n                <div className=\"form_todo\">\r\n                    <p>To Do:</p>\r\n                    <input type=\"text\" value={text} placeholder=\"what you do today?\" onChange={textHandler} required></input>\r\n                </div>\r\n                <div className=\"form_time\">\r\n                    <p>Time:</p>\r\n                    <input type=\"time\" value={time} onChange={timeHandler} required></input>\r\n                </div>\r\n                <p className=\"form_error\" style={error ? {opacity:'1'} : {opacity:'0'}}>please fill the form</p>\r\n                <button type=\"submit\" onClick={submitHandler}>Add List</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nfunction Li({li, list, setList, text, time, id, completed}) {\r\n    \r\n    const deleteHandler =()=>{\r\n        setList(list.filter(el => el.id !== li.id))\r\n    };\r\n    const checkHandler = () =>{\r\n        setList(\r\n            list.map((item) =>{\r\n            if (item.id === li.id){\r\n                return {\r\n                    ...item, completed: !item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n\r\n    return (\r\n    <div className=\"li\" style={completed ? {borderLeft:\"lightcoral solid 30px\"} : {borderLeft:\"transparent solid 30px\"}}>\r\n      <div className=\"li_list\">\r\n          <h4>{text}</h4>\r\n          <p>time: {time}</p>\r\n      </div>\r\n      <div className=\"button\">\r\n          <button className=\"deleteBtn\" onClick={deleteHandler}>X</button>\r\n          <button className=\"checkBtn\" onClick={checkHandler}>check</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Li;\r\n","import React from 'react';\r\nimport Li from './Li';\r\n\r\nfunction List ({list,setList}) {\r\n  return (\r\n\r\n    <div className=\"list\">\r\n        <h3>Your List</h3>\r\n    {list.map(li=>(\r\n        <div key={li.id}>\r\n            <Li  list={list} setList={setList} li={li} text={li.text} time={li.time} id={li.id} completed={li.completed}/> \r\n        </div>\r\n    ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;","import React, {useState} from 'react';\nimport './style.css';\n//Import Comp\nimport Header from './Comp/Header';\nimport Form from './Comp/Form';\nimport List from './Comp/List';\n\nfunction App() {\n  const [text,setText] = useState('');\n  const [time,setTime] = useState('');\n  const [list,setList] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Form text={text} setText={setText} time={time} setTime={setTime} list={list} setList={setList}/>\n      <List list={list} setList={setList} />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}